[{"/Users/vladdenisov/projects/web/src/index.tsx":"1","/Users/vladdenisov/projects/web/src/reportWebVitals.ts":"2","/Users/vladdenisov/projects/web/src/App.tsx":"3","/Users/vladdenisov/projects/web/src/Pages/Login/Login.tsx":"4","/Users/vladdenisov/projects/web/src/Pages/Home/Home.tsx":"5","/Users/vladdenisov/projects/web/src/config.ts":"6","/Users/vladdenisov/projects/web/src/Pages/Chat/Chat.tsx":"7","/Users/vladdenisov/projects/web/src/Components/Preloader/Preloader.tsx":"8","/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/Sidebar.tsx":"9","/Users/vladdenisov/projects/web/src/Pages/Chat/Dialog/Dialog.tsx":"10","/Users/vladdenisov/projects/web/src/Pages/Chat/Dialog/Message.tsx":"11","/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/Header/Header.tsx":"12","/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/ChatList/ChatList.tsx":"13","/Users/vladdenisov/projects/web/src/Utils/decrypt.ts":"14","/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/ChatList/ChatCard.tsx":"15","/Users/vladdenisov/projects/web/src/Components/UserPicture/UserPicture.tsx":"16","/Users/vladdenisov/projects/web/src/Utils/keysUtils.ts":"17","/Users/vladdenisov/projects/web/src/Utils/formatDate.ts":"18","/Users/vladdenisov/projects/web/src/Pages/Chat/Dialog/MessageInput.tsx":"19","/Users/vladdenisov/projects/web/src/Utils/encrypt.ts":"20","/Users/vladdenisov/projects/web/src/Contexts/UserContext.tsx":"21","/Users/vladdenisov/projects/web/src/Contexts/DialogContext.tsx":"22","/Users/vladdenisov/projects/web/src/Pages/Chat/Dialog/DialogHeader.tsx":"23","/Users/vladdenisov/projects/web/src/Pages/Register/Register.tsx":"24","/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/Search/Search.tsx":"25","/Users/vladdenisov/projects/web/src/Contexts/SearchReducer.tsx":"26","/Users/vladdenisov/projects/web/src/Contexts/ScreenContext.tsx":"27","/Users/vladdenisov/projects/web/src/Logux/store.ts":"28","/Users/vladdenisov/projects/web/src/Reducers/index.ts":"29","/Users/vladdenisov/projects/web/src/Reducers/UserReducer.ts":"30","/Users/vladdenisov/projects/web/src/Reducers/ChatReducer.ts":"31","/Users/vladdenisov/projects/web/src/Logux/connect.ts":"32"},{"size":1055,"mtime":1621155170058,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":1613728181456,"results":"35","hashOfConfig":"34"},{"size":590,"mtime":1619430986984,"results":"36","hashOfConfig":"34"},{"size":2580,"mtime":1621155617629,"results":"37","hashOfConfig":"34"},{"size":1973,"mtime":1621443883663,"results":"38","hashOfConfig":"34"},{"size":117,"mtime":1621418061077,"results":"39","hashOfConfig":"34"},{"size":1349,"mtime":1621155859454,"results":"40","hashOfConfig":"34"},{"size":265,"mtime":1613728181447,"results":"41","hashOfConfig":"34"},{"size":1042,"mtime":1621153751464,"results":"42","hashOfConfig":"34"},{"size":5242,"mtime":1621153751456,"results":"43","hashOfConfig":"34"},{"size":3132,"mtime":1621427732336,"results":"44","hashOfConfig":"34"},{"size":665,"mtime":1619266339067,"results":"45","hashOfConfig":"34"},{"size":1659,"mtime":1621157050572,"results":"46","hashOfConfig":"34"},{"size":976,"mtime":1615581909531,"results":"47","hashOfConfig":"34"},{"size":2432,"mtime":1621157721047,"results":"48","hashOfConfig":"34"},{"size":626,"mtime":1619266314678,"results":"49","hashOfConfig":"34"},{"size":442,"mtime":1613728181452,"results":"50","hashOfConfig":"34"},{"size":1575,"mtime":1615754156881,"results":"51","hashOfConfig":"34"},{"size":1239,"mtime":1621153751450,"results":"52","hashOfConfig":"34"},{"size":723,"mtime":1613728181452,"results":"53","hashOfConfig":"34"},{"size":1934,"mtime":1618823815222,"results":"54","hashOfConfig":"34"},{"size":2674,"mtime":1620462194051,"results":"55","hashOfConfig":"34"},{"size":188,"mtime":1615913135532,"results":"56","hashOfConfig":"34"},{"size":4280,"mtime":1621155674292,"results":"57","hashOfConfig":"34"},{"size":1796,"mtime":1621156962925,"results":"58","hashOfConfig":"34"},{"size":1967,"mtime":1618824046933,"results":"59","hashOfConfig":"34"},{"size":1372,"mtime":1618846269980,"results":"60","hashOfConfig":"34"},{"size":520,"mtime":1620486880021,"results":"61","hashOfConfig":"34"},{"size":1767,"mtime":1621157542457,"results":"62","hashOfConfig":"34"},{"size":1344,"mtime":1620850512965,"results":"63","hashOfConfig":"34"},{"size":3368,"mtime":1621427648934,"results":"64","hashOfConfig":"34"},{"size":942,"mtime":1621153304199,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"1d5vwsx",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"69"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"69"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"69"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"69"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"69"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"/Users/vladdenisov/projects/web/src/index.tsx",["142"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, Route, Link} from 'react-router-dom';\nimport Login from './Pages/Login/Login';\nimport Home from './Pages/Home/Home';\nimport Register from './Pages/Register/Register';\nimport { ScreenProvider } from './Contexts/ScreenContext';\nReactDOM.render(\n  <React.StrictMode>\n      <ScreenProvider>\n        <BrowserRouter>\n          <App>\n            <Route exact path='/login' component={Login}/>\n            <Route exact path='/register' component={Register}/>\n            <Route path={['/:id', '/']} exact component={Home} />\n          </App>\n        </BrowserRouter>\n      </ScreenProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["143","144"],"/Users/vladdenisov/projects/web/src/reportWebVitals.ts",[],"/Users/vladdenisov/projects/web/src/App.tsx",["145"],"import React, { useEffect } from 'react';\nimport './App.css';\nimport { useScreen } from './Contexts/ScreenContext';\n\nconst App: React.FunctionComponent = ({children}) => {\n  const {dispatch} = useScreen()\n  useEffect(() => {\n    let vh = window.innerHeight * 0.01\n    document.documentElement.style.setProperty('--vh', `${vh}px`)\n    window.addEventListener('resize', (e) => {\n      dispatch({type: 'CHANGE'})\n      let vh = window.innerHeight * 0.01\n      document.documentElement.style.setProperty('--vh', `${vh}px`)\n    })\n  }, [])\n  return <>\n    {children}\n  </>\n}\nexport default App;\n","/Users/vladdenisov/projects/web/src/Pages/Login/Login.tsx",["146","147","148","149","150"],"import React, {useEffect, useState} from \"react\";\nimport {Link, Redirect, useHistory} from \"react-router-dom\";\nimport './Login.scss';\nimport Preloader from \"../../Components/Preloader/Preloader\";\nimport config from '../../config'\nimport { AES } from \"crypto-js\";\nimport {enc} from 'crypto-js'\nimport {Client} from \"@logux/client\";\nimport store from \"../../Logux/store\";\nfunction login (username: string, password: string, setStage: (p: string) => void) {\n  let client = new Client({\n    subprotocol: '1.0.0',\n    server: config.socket_url,\n    userId: 'anonymous'\n  })\n  client.on('add', (action: any) => {\n    if (action.type === 'login/done') {\n      localStorage.setItem('user_id', action.user_id)\n      localStorage.setItem('token', action.token)\n      localStorage.setItem('key', AES.decrypt(action.private_key, password).toString(enc.Utf8))\n      store.client.changeUser(action.user_id,action.token)\n      setStage('/')\n    } else if (action.type === 'logux/undo') {\n      alert(action.reason)\n    }\n  })\n  client.start()\n  client.log.add({ type: 'login', username, password }, { sync: true })\n}\n\nconst Login: React.FunctionComponent = () => {\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: '',\n    key: ''\n  })\n  const [stage, setStage] = useState(0)\n  const handleChange = (e: any) => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    })\n  }\n  const history = useHistory()\n  return <>\n    <div className=\"login_main\">\n      <div className={'login_main__header'}>\n          <h1 className={'login_main__header___title'}>Sign in into your account</h1>\n          <h2 className={'login_main__header___undertitle'}>If you don't have account, sign up using button below</h2>\n      </div>\n      <div className={'login_main__block'}>\n        <form className={'login_main__form'} onSubmit={(e) =>{\n          e.preventDefault()\n          login(credentials.username, credentials.password, (p: string) => history.push(p))\n        }}>\n          <>\n            <h1>Cryptash</h1>\n            <input name={'username'} placeholder={'Username'} className={'login_main__form___username'} onChange={(e) => handleChange(e)}/>\n            <input name={'password'} type={'password'} placeholder={'Password'} className={'login_main__form___password'} onChange={(e) => handleChange(e)}/>\n            <button type={'submit'} className={'login_main__form___submit'}>Login</button>\n            <Link to={'/register'}>Create new account</Link>\n          </>\n        </form>\n      </div>\n    </div>\n  </>\n\n}\n\nexport default Login\n","/Users/vladdenisov/projects/web/src/Pages/Home/Home.tsx",["151"],"/Users/vladdenisov/projects/web/src/config.ts",[],"/Users/vladdenisov/projects/web/src/Pages/Chat/Chat.tsx",["152","153","154","155","156","157","158"],"import Sidebar from \"./Sidebar/Sidebar\"\nimport './Chat.scss'\nimport config from '../../config'\nimport React, {useEffect, useRef, useState } from \"react\"\nimport Preloader from '../../Components/Preloader/Preloader'\nimport { useParams } from \"react-router-dom\"\nimport Dialog from \"./Dialog/Dialog\"\nimport { useUser} from '../../Contexts/UserContext'\nimport { DialogProvider } from \"../../Contexts/DialogContext\"\nimport {useSubscription} from \"@logux/redux\";\nimport store from \"../../Logux/store\";\nimport {badge} from \"@logux/client\";\nimport {badgeStyles} from \"@logux/client/badge/styles\";\nimport {connector, Props} from \"../../Logux/connect\";\nimport {Provider} from \"react-redux\";\nconst Chat: React.FunctionComponent<Props> = (props) => {\n  const params: {id: string} = useParams()\n  const isSubscribing = useSubscription([`user/${localStorage.getItem('user_id')}`]);\n  if (params.id === undefined) {\n    console.log('No chat')\n    return (\n      <Provider store={store}>\n        <div className={'chat'}>\n          <Sidebar />\n        </div>\n      </Provider>\n    )\n  }\n\n  if (isSubscribing) {\n    return <Preloader />\n  }\n\n  return (\n    <Provider store={store}>\n      <div className={'chat'}>\n        <Sidebar/>\n        <DialogProvider>\n          <Dialog/>\n        </DialogProvider>\n      </div>\n    </Provider>\n  )\n}\nexport default connector(Chat)","/Users/vladdenisov/projects/web/src/Components/Preloader/Preloader.tsx",[],"/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/Sidebar.tsx",[],"/Users/vladdenisov/projects/web/src/Pages/Chat/Dialog/Dialog.tsx",["159","160","161","162","163"],"import { nanoid } from \"nanoid\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport Preloader from \"../../../Components/Preloader/Preloader\";\nimport Message from \"./Message\";\nimport './Dialog.scss'\nimport MessageInput from \"./MessageInput\";\nimport { useParams } from \"react-router\";\nimport { useDialog } from \"../../../Contexts/DialogContext\";\nimport DialogHeader from \"./DialogHeader\";\nimport {useDispatch, useSubscription} from \"@logux/redux\";\nimport {useSelector} from \"react-redux\";\nimport {getMessages, RootState} from \"../../../Reducers\";\nimport store from \"../../../Logux/store\";\nimport {connector, Props} from \"../../../Logux/connect\";\n\nconst Dialog: React.FunctionComponent<Props> = (props) => {\n  let params: {id: string} = useParams()\n  const dispatch = useDispatch()\n  const page = useRef(0)\n  const prevScrollHeight = useRef(0)\n  const [isRequested, setRequested] = useState(false)\n  const dialog = useDialog()\n  const isSubscribing = useSubscription([`chat/${params.id}`]);\n  const chat = useSelector((state: RootState) => state.chatReducer)\n  const [msg, setMsg] = useState<Array<JSX.Element>>([])\n  const messagesDiv = useRef<HTMLDivElement>(null)\n  const callbacks = useRef<Array<Function>>([])\n  const subcribeToScroll = (callback: Function) => {\n    callbacks.current.push(callback)\n    return () => callbacks.current.filter(x => x !== callback)\n  }\n  useEffect(() => {\n    props.setChatId(params.id)\n  }, []);\n\n  useEffect(() => {\n    props.changeChat(params.id)\n  }, [params.id]);\n\n  const scrollCallback = (e: any) => {\n    callbacks.current.forEach(callback => {\n      callback(e)\n    });\n    if (e.target.scrollTop === 0) {\n      if (!isRequested) {\n        page.current = page.current + 1\n        prevScrollHeight.current = messagesDiv.current? messagesDiv.current.scrollHeight : 0\n        setRequested(true)\n        dispatch.sync(getMessages({pg: page.current, chat_id: params.id})).then(() => setRequested(false))\n      }\n    }\n  }\n  const callback = useCallback((ev: MessageEvent<any>, id) => {\n    const response = JSON.parse(ev.data)\n    if (response.action === 'get_messages') {\n      if (page.current === 0) {\n        dialog.dispatch({type: 'CHANGE_DIALOG'})\n        callbacks.current = []\n        dialog.dispatch({type: 'CHANGE_KEY', payload: response.pub_key})\n        dialog.dispatch({type: 'ADD_MESSAGE', payload: response.messages})\n      }\n      else {\n        if (response.messages[0]) {\n          dialog.dispatch({type: 'ADD_MORE_MESSAGES', payload: response.messages})\n          setRequested(false)\n        } \n      }\n    }\n    if (response.action === 'new_message') {\n      console.log(response.data.message.chat_id, id)\n      if (response.data.message.chat_id === id) {\n        dialog.dispatch({type: 'ADD_MESSAGE', payload: [{\n          content: response.data.message.content,\n          pub_key: dialog.state.pub_key,\n          date: response.data.message.date,\n          fromMe: response.data.message.isMe,\n          read: response.data.message.read,\n          message_id: response.data.message.message_id\n        }]})\n      }\n    }\n    if (response.action === 'message_read_by_user') {\n      if (response.data.chat_id === id)\n        dialog.dispatch({type: 'SET_MESSAGE_READ_STATUS', payload: {\n          id: response.data.message_id\n        }})\n    }\n  }, [dialog.state.user_id])\n  useEffect(() => {\n    store.subscribe(() => {\n      let c = store.getState().chatReducer\n      const msgComp: Array<JSX.Element> = []\n      c.messages.forEach((m: {\n        content: string,\n        fromMe: boolean,\n        date: Date,\n        read: boolean,\n        message_id: string\n      }) => {\n        return msgComp.push(<Message socket={props.socket} id={m.message_id} subscribeToScroll={(c: Function) => subcribeToScroll(c)} isRead={m.read} content={m.content} pub_key={props.chat.pub_key} key={m.message_id} fromMe={m.fromMe} date={m.date} />)\n      });\n      setMsg(msgComp)\n    })\n    const msgComp: Array<JSX.Element> = []\n    chat.messages.forEach((m: {\n      content: string,\n      fromMe: boolean,\n      date: Date,\n      read: boolean,\n      message_id: string\n  }) => {\n      return msgComp.push(<Message socket={props.socket} id={m.message_id} subscribeToScroll={(c: Function) => subcribeToScroll(c)} isRead={m.read} content={m.content} pub_key={props.chat.pub_key} key={nanoid(6)} fromMe={m.fromMe} date={m.date} />)\n  });\n    setMsg(msgComp)\n  },[chat])\n  useEffect(() => {\n    if (messagesDiv.current && (messagesDiv.current.scrollTop > 1000 || page.current === 0)){\n      messagesDiv.current.scrollTo(0,messagesDiv.current ? messagesDiv.current.scrollHeight : 0)\n    }\n    else if (messagesDiv.current)\n      messagesDiv.current.scrollTo(0,messagesDiv.current ? messagesDiv.current.scrollHeight - prevScrollHeight.current : 0);\n  }, [msg, isSubscribing])\n  if (!params.id) {\n    return <div></div>\n  }\n  if (isSubscribing) return <div className={'preloader'}><Preloader /></div>\n  return <>\n    <div className={'chat_dialog'}>\n      <DialogHeader socket={props.socket} />\n      <div className={'chat_dialog__messages'} onScroll={(e) => scrollCallback(e)} ref={messagesDiv}>{msg}</div>\n      <MessageInput {...props}/>\n    </div>\n  </>\n}\nexport default connector(Dialog)","/Users/vladdenisov/projects/web/src/Pages/Chat/Dialog/Message.tsx",["164","165","166","167"],"/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/Header/Header.tsx",["168"],"import UserPicture from \"../../../../Components/UserPicture/UserPicture\"\nimport './Header.scss'\nimport {useScreen} from \"../../../../Contexts/ScreenContext\";\n\nconst SidebarHeader = (props: {\n  user: {\n    username: string,\n    picture: string\n  }\n  setOpen: () => void\n}) => {\n  const screen = useScreen()\n  return (<>\n    <div className={'chat_sidebar__header'} onClick={(e: any) => {\n      console.log('click')\n      props.setOpen()\n    }}>\n      <UserPicture username={props.user.username} picture={props.user.picture}/>\n      <span className={'chat_sidebar__header___username'}>{props.user.username}</span> \n    </div>\n    \n  </>)\n}\nexport default SidebarHeader","/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/ChatList/ChatList.tsx",["169","170","171"],"import { ChatResponse } from '../../../../Typings/ChatReponse'\nimport ChatCard from './ChatCard'\nimport {nanoid} from 'nanoid'\nimport './ChatList.scss'\nimport { useSearch } from '../../../../Contexts/SearchReducer'\nimport store from \"../../../../Logux/store\";\nimport {useEffect, useRef, useState} from \"react\";\nconst ChatList = () => {\n  const search = useSearch()\n  const chat = useRef<ChatResponse[]>(store.getState().userReducer.chats)\n  const [ChatCards, setChatCards] = useState<Array<React.FunctionComponentElement<{chat: ChatResponse}>>>([])\n  const listener = (chats: ChatResponse[]) => {\n    const chatArray: Array<React.FunctionComponentElement<{chat: ChatResponse}>> = []\n    if (search.state.chats)\n      search.state.chats.forEach(user => {\n        chatArray.push(<ChatCard chat={{\n          chat_id: '',\n          user,\n          messages: []\n        }} key={nanoid(5)}/>)\n      })\n    chats.forEach((chat: any) => {\n      if (search.state.users) {\n        if (chat.user.username.toLowerCase().includes(search.state.users.toLowerCase())) {\n          chatArray.push(<ChatCard chat={chat} key={chat.chat_id}/>)\n        }\n      }\n      else {\n        chatArray.push(<ChatCard chat={chat} key={chat.chat_id}/>)\n      }\n    })\n    if (chatArray === ChatCards) return\n    setChatCards(chatArray)\n  }\n  useEffect(() => {\n    listener(store.getState().userReducer.chats)\n    store.subscribe(() => {\n      listener(store.getState().userReducer.chats)\n    })\n  }, []);\n  useEffect(() => {\n    listener(store.getState().userReducer.chats)\n  }, [search.state]);\n\n  return <>\n    <div className={'chat_list'}>{ChatCards}</div>\n  </>\n}\nexport default ChatList","/Users/vladdenisov/projects/web/src/Utils/decrypt.ts",[],"/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/ChatList/ChatCard.tsx",["172","173","174","175"],"import {useEffect, useState} from \"react\";\nimport TimeAgo from \"timeago-react\";\nimport UserPicture from \"../../../../Components/UserPicture/UserPicture\";\nimport config from \"../../../../config\";\nimport { ChatResponse } from \"../../../../Typings/ChatReponse\";\nimport { decryptMessage } from \"../../../../Utils/decrypt\";\nimport { formatTime } from \"../../../../Utils/formatDate\";\nimport { useHistory } from 'react-router-dom';\nimport {useDispatch} from \"@logux/redux\";\nimport {createChat} from \"../../../../Reducers\";\nimport store from \"../../../../Logux/store\";\n\nconst ChatCard: React.FunctionComponent<{chat: ChatResponse}> = (props) => {\n  const {chat} = props\n  const [isRedirect, SetRedirect] = useState(false)\n  let history = useHistory();\n  const dispatch = useDispatch()\n  useEffect(() => {\n    store.client.log.type('chat/create/done', (action: {\n      type: 'chat/create/done',\n      payload: {\n        chat_id: string\n      }\n    }, meta) => {\n      history.push(`/${action.payload.chat_id}`)\n    })\n  }, []);\n\n  console.log(chat.user.username, chat.messages[0] ? chat.messages[0].date : '')\n  const generateText = () => {\n    if (chat.messages[0]) {\n        try {\n          return decryptMessage(localStorage.getItem('key'),chat.messages[0].content, chat.user.pub_key).text\n        }\n        catch (e) {\n          console.info(e.text)\n          return ''\n        }\n    }\n    return ''\n  }\n  const handleClick = (e: any) => {\n    if (!chat.chat_id) {\n      dispatch.sync(createChat({user_id: chat.user.user_id}))\n    }\n    else {\n      history.push(`/${chat.chat_id}`)\n    }\n  }\n  return <>\n    <div className={'chat_list__card'} onClick={(e) => handleClick(e)}>\n      <UserPicture username={chat.user.username} picture={chat.user.picture}/>\n      <div className={'right'}>\n        <div className={'chat_list__card___top'}>\n          <span className={'chat_list__card___top____username'}>{chat.user.username}</span>\n          <span className={'chat_list__card___top____date'}>\n            {chat.messages[0] && chat.messageAt ? formatTime(chat.messageAt) ? formatTime(chat.messageAt) : <TimeAgo datetime={chat.messageAt} opts={{minInterval: 5}}/> : ''}\n          </span>\n        </div>\n        <div className={'chat_list__card___bottom'}>\n          <span className={'chat_list__card___bottom____content'}>{\n            generateText()\n          }</span>\n        </div>\n      </div>\n    </div>\n  </>\n}\n\nexport default ChatCard","/Users/vladdenisov/projects/web/src/Components/UserPicture/UserPicture.tsx",[],"/Users/vladdenisov/projects/web/src/Utils/keysUtils.ts",[],"/Users/vladdenisov/projects/web/src/Utils/formatDate.ts",[],"/Users/vladdenisov/projects/web/src/Pages/Chat/Dialog/MessageInput.tsx",[],"/Users/vladdenisov/projects/web/src/Utils/encrypt.ts",[],"/Users/vladdenisov/projects/web/src/Contexts/UserContext.tsx",[],"/Users/vladdenisov/projects/web/src/Contexts/DialogContext.tsx",[],"/Users/vladdenisov/projects/web/src/Pages/Chat/Dialog/DialogHeader.tsx",[],"/Users/vladdenisov/projects/web/src/Pages/Register/Register.tsx",["176"],"import React, {useState} from \"react\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport './Register.scss';\nimport config from '../../config'\nimport { generateKeyPair } from \"../../Utils/keysUtils\";\nimport {Client} from \"@logux/client\";\nimport {AES} from 'crypto-js'\nimport store from \"../../Logux/store\";\nconst Register: React.FunctionComponent = () => {\n  const [key, setKeys] = useState(generateKeyPair())\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  })\n  const [doesMeetReqs, setMeetReq] = useState(false)\n  const [isSame, setSame] = useState(false)\n  let history = useHistory();\n  const handleChange = (e: any) => {\n    console.log(e.target.name, e.target.value)\n    if (e.target.name === 'verify_password') {\n        if (e.target.value === credentials.password) {\n          setSame(true)\n        }\n        else {\n          setSame(false)\n        }\n    }\n    else {\n        setCredentials({\n            ...credentials,\n            [e.target.name]: e.target.value\n        })\n        if (e.target.name === 'password') {\n          let pass_regexp = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,31}$/ // 8 to 31 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character\n          if (e.target.value.match(pass_regexp)) {\n            setMeetReq(true)\n          }\n          else {\n            setMeetReq(false)\n          }\n        }\n    }\n  }\n  function register (username: string, password: string, key: {\n    private_key: string, public_key: string\n  }) {\n    if (!password || !username) return\n    if (!isSame) return\n    if (!doesMeetReqs) return\n    if (username.length < 3) {\n      alert(\"Username must be at least 3 symbols\")\n      return\n    }\n    let pass_regexp = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,31}$/ // 8 to 31 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character\n    if (!password.match(pass_regexp)) {\n      setMeetReq(false)\n      return\n    }\n    let client = new Client({\n      subprotocol: '1.0.0',\n      server: config.socket_url,\n      userId: 'anonymous'\n    })\n    client.on('add', (action: any) => {\n      if (action.type === 'register/done') {\n        localStorage.setItem('user_id', action.user_id)\n        localStorage.setItem('token', action.token)\n        localStorage.setItem('key', key.private_key)\n        store.client.changeUser(action.user_id,action.token)\n        history.push(`/`)\n      } else if (action.type === 'logux/undo') {\n        alert(action.reason)\n      }\n    })\n    client.start()\n    client.log.add({ type: 'register', username, password, private_key: AES.encrypt(key.private_key, password).toString(), pub_key: key.public_key}, { sync: true })\n  }\n  const firstStage = () => {\n    return (\n        <>\n          <h1>Cryptash</h1>\n          <input name={'username'} placeholder={'Username'} className={'register_main__form___username'} onChange={(e) => handleChange(e)}/>\n          <input name={'password'} type={'password'} placeholder={'Password'} className={`register_main__form___password ${doesMeetReqs ? '' : 'red-outline'}`} onChange={(e) => handleChange(e)}/>\n          <input name={'verify_password'} type={'password'} placeholder={'Verify Password'} className={`register_main__form___password ${isSame ? '' : 'red-outline'}`} onChange={(e) => handleChange(e)}/>\n          <button type={'submit'} className={'register_main__form___submit'} disabled={!isSame}>Create account</button>\n          <Link to={'/login'}>Back to login</Link>\n        </>\n  )\n  }\n  return <>\n    <div className=\"register_main\">\n      <div className={'register_main__header'}>\n          <h1 className={'register_main__header___title'}>Create your account</h1>\n          <h2 className={'register_main__header___undertitle'}>If you already have an account, login using button below</h2>\n      </div>\n      <div className={'register_main__block'}>\n        <form className={'register_main__form'} onSubmit={(e) =>{\n          e.preventDefault()\n          register(credentials.username, credentials.password, key)\n        }}>\n          {firstStage()}\n        </form>\n      </div>\n    </div>\n  </>\n\n}\n\nexport default Register\n","/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/Search/Search.tsx",["177","178"],"import config from '../../../../config'\nimport { useSearch } from '../../../../Contexts/SearchReducer'\nimport './Search.scss'\nimport {useEffect, useRef} from \"react\";\nimport {useDispatch} from \"@logux/redux\";\nimport {searchUsers} from \"../../../../Reducers\";\nimport store from \"../../../../Logux/store\";\n\nconst SidebarSearch = (props: {\n  isOpened: boolean,\n  setOpened: (s: boolean) => void\n}) => {\n  const search = useSearch()\n  const input = useRef<HTMLInputElement>(null)\n  const dispatch = useDispatch()\n  useEffect(() => {\n    store.client.log.type('users/search/done', (action: {\n      type: 'users/search/done',\n      payload: any\n    }, meta) => {\n      search.dispatch({\n        type: 'CHANGE_CHATS',\n        payload: {chats: action.payload.users}\n      })\n    })\n  }, []);\n\n  const handleSearch = (e: {target: {value: string}}) => {\n    search.dispatch({type: 'CHANGE_FILTER', payload: {\n      type: 'users',\n      filter: e.target.value\n    }})\n    if (e.target.value.length < 3) {\n      search.dispatch({type: 'CHANGE_CHATS', payload: {\n        chats: []\n      }})\n      return\n    }\n    dispatch.sync(searchUsers({query: e.target.value}))\n  }\n  return (<>\n    <div className={'chat_sidebar__search'}>\n      <div className={'chat_sidebar__search___bar'} onClick={(e) => {\n        if (!props.isOpened) {\n          if (input.current !== null) {\n            setTimeout(() => {props.setOpened(true); if (input.current !== null) input.current.focus()}, 100)\n          }\n        }\n      }}>\n        <span className=\"material-icons outlined\">\n          search\n        </span>\n        <input type={'text'} className={'chat_sidebar__search___bar-input'} placeholder={'Search users'} ref={input} onChange={(e) => handleSearch(e)}/>\n      </div>\n    </div>\n  </>)\n}\nexport default SidebarSearch","/Users/vladdenisov/projects/web/src/Contexts/SearchReducer.tsx",[],"/Users/vladdenisov/projects/web/src/Contexts/ScreenContext.tsx",[],"/Users/vladdenisov/projects/web/src/Logux/store.ts",[],"/Users/vladdenisov/projects/web/src/Reducers/index.ts",["179","180","181","182"],"import {userReducer} from \"./UserReducer\";\n\nimport { combineReducers, Reducer } from \"redux\";\nimport actionCreatorFactory, { isType } from \"typescript-fsa\";\nimport {chatReducer} from \"./ChatReducer\";\n\nconst actionCreator = actionCreatorFactory();\n\nexport const changeChat = actionCreator<{ id: string }>(\"chat/change\");\nexport type changeChatAction = ReturnType<typeof changeChat>;\nexport const setChatId = actionCreator<{ id: string }>(\"chat/set_id\");\nexport type setChatIdAction = ReturnType<typeof setChatId>;\n\nexport const getMessages = actionCreator<{ pg: number, chat_id: string }>(\"chat/messages/get\");\nexport type getMessagesAction = ReturnType<typeof getMessages>;\n\nexport const setMessageRead = actionCreator<{ message_id: string, chat_id: string }>(\"chat/message/read\");\nexport type setMessageReadAction = ReturnType<typeof setMessageRead>;\n\nexport const searchUsers = actionCreator<{ query: string }>(\"users/search\");\nexport type searchUsersAction = ReturnType<typeof searchUsers>;\n\nexport const createChat = actionCreator<{ user_id: string }>(\"chat/create\");\nexport type createChatAction = ReturnType<typeof createChat>;\n\nexport const sendMessage = actionCreator<{\n  content: string,\n  from: string\n  chat_id: string\n}>(\"chat/messages/send\");\nexport type sendMessage = ReturnType<typeof sendMessage>;\n\nexport type SubscribeAction = { type: \"logux/subscribe\"; channel: string };\nexport const subscribe = (channel: string): SubscribeAction => ({\n  type: \"logux/subscribe\",\n  channel,\n});\n\ntype Actions =\n  changeChatAction\n  | SubscribeAction\n  | getMessagesAction\n  | setChatIdAction\n  | sendMessage\n\n\nconst rootReducer = combineReducers({\n  userReducer,\n  chatReducer\n})\n\nexport default rootReducer\nexport type RootState = ReturnType<typeof rootReducer>;","/Users/vladdenisov/projects/web/src/Reducers/UserReducer.ts",[],"/Users/vladdenisov/projects/web/src/Reducers/ChatReducer.ts",["183"],"/Users/vladdenisov/projects/web/src/Logux/connect.ts",[],{"ruleId":"184","severity":1,"message":"185","line":6,"column":31,"nodeType":"186","messageId":"187","endLine":6,"endColumn":35},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":15,"column":6,"nodeType":"194","endLine":15,"endColumn":8,"suggestions":"195"},{"ruleId":"184","severity":1,"message":"196","line":1,"column":16,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"197","line":2,"column":15,"nodeType":"186","messageId":"187","endLine":2,"endColumn":23},{"ruleId":"184","severity":1,"message":"198","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":17},{"ruleId":"184","severity":1,"message":"199","line":37,"column":10,"nodeType":"186","messageId":"187","endLine":37,"endColumn":15},{"ruleId":"184","severity":1,"message":"200","line":37,"column":17,"nodeType":"186","messageId":"187","endLine":37,"endColumn":25},{"ruleId":"192","severity":1,"message":"201","line":53,"column":6,"nodeType":"194","endLine":53,"endColumn":13,"suggestions":"202"},{"ruleId":"184","severity":1,"message":"203","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":14},{"ruleId":"184","severity":1,"message":"196","line":4,"column":16,"nodeType":"186","messageId":"187","endLine":4,"endColumn":25},{"ruleId":"184","severity":1,"message":"204","line":4,"column":27,"nodeType":"186","messageId":"187","endLine":4,"endColumn":33},{"ruleId":"184","severity":1,"message":"205","line":4,"column":35,"nodeType":"186","messageId":"187","endLine":4,"endColumn":43},{"ruleId":"184","severity":1,"message":"206","line":8,"column":10,"nodeType":"186","messageId":"187","endLine":8,"endColumn":17},{"ruleId":"184","severity":1,"message":"207","line":12,"column":9,"nodeType":"186","messageId":"187","endLine":12,"endColumn":14},{"ruleId":"184","severity":1,"message":"208","line":13,"column":9,"nodeType":"186","messageId":"187","endLine":13,"endColumn":20},{"ruleId":"192","severity":1,"message":"209","line":34,"column":6,"nodeType":"194","endLine":34,"endColumn":8,"suggestions":"210"},{"ruleId":"192","severity":1,"message":"211","line":38,"column":6,"nodeType":"194","endLine":38,"endColumn":17,"suggestions":"212"},{"ruleId":"184","severity":1,"message":"213","line":53,"column":9,"nodeType":"186","messageId":"187","endLine":53,"endColumn":17},{"ruleId":"192","severity":1,"message":"214","line":88,"column":6,"nodeType":"194","endLine":88,"endColumn":28,"suggestions":"215"},{"ruleId":"192","severity":1,"message":"216","line":115,"column":5,"nodeType":"194","endLine":115,"endColumn":11,"suggestions":"217"},{"ruleId":"192","severity":1,"message":"218","line":28,"column":6,"nodeType":"194","endLine":28,"endColumn":13,"suggestions":"219"},{"ruleId":"184","severity":1,"message":"220","line":32,"column":9,"nodeType":"186","messageId":"187","endLine":32,"endColumn":29},{"ruleId":"192","severity":1,"message":"221","line":58,"column":6,"nodeType":"194","endLine":58,"endColumn":14,"suggestions":"222"},{"ruleId":"192","severity":1,"message":"223","line":61,"column":6,"nodeType":"194","endLine":61,"endColumn":8,"suggestions":"224"},{"ruleId":"184","severity":1,"message":"225","line":12,"column":9,"nodeType":"186","messageId":"187","endLine":12,"endColumn":15},{"ruleId":"184","severity":1,"message":"226","line":10,"column":9,"nodeType":"186","messageId":"187","endLine":10,"endColumn":13},{"ruleId":"192","severity":1,"message":"227","line":40,"column":6,"nodeType":"194","endLine":40,"endColumn":8,"suggestions":"228"},{"ruleId":"192","severity":1,"message":"227","line":43,"column":6,"nodeType":"194","endLine":43,"endColumn":20,"suggestions":"229"},{"ruleId":"184","severity":1,"message":"203","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":14},{"ruleId":"184","severity":1,"message":"230","line":15,"column":10,"nodeType":"186","messageId":"187","endLine":15,"endColumn":20},{"ruleId":"184","severity":1,"message":"231","line":15,"column":22,"nodeType":"186","messageId":"187","endLine":15,"endColumn":33},{"ruleId":"192","severity":1,"message":"232","line":27,"column":6,"nodeType":"194","endLine":27,"endColumn":8,"suggestions":"233"},{"ruleId":"184","severity":1,"message":"234","line":10,"column":15,"nodeType":"186","messageId":"187","endLine":10,"endColumn":22},{"ruleId":"184","severity":1,"message":"203","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":14},{"ruleId":"192","severity":1,"message":"235","line":26,"column":6,"nodeType":"194","endLine":26,"endColumn":8,"suggestions":"236"},{"ruleId":"184","severity":1,"message":"237","line":3,"column":27,"nodeType":"186","messageId":"187","endLine":3,"endColumn":34},{"ruleId":"184","severity":1,"message":"238","line":4,"column":32,"nodeType":"186","messageId":"187","endLine":4,"endColumn":38},{"ruleId":"239","severity":1,"message":"240","line":31,"column":13,"nodeType":"186","messageId":"241","endLine":31,"endColumn":24},{"ruleId":"184","severity":1,"message":"242","line":39,"column":6,"nodeType":"186","messageId":"187","endLine":39,"endColumn":13},{"ruleId":"184","severity":1,"message":"243","line":111,"column":7,"nodeType":"186","messageId":"187","endLine":111,"endColumn":18},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["244"],"no-negated-in-lhs",["245"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["246"],"'useEffect' is defined but never used.","'Redirect' is defined but never used.","'Preloader' is defined but never used.","'stage' is assigned a value but never used.","'setStage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'signOut'. Either include it or remove the dependency array.",["247"],"'config' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'useUser' is defined but never used.","'badge' is defined but never used.","'badgeStyles' is defined but never used.","React Hook useEffect has missing dependencies: 'params.id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["248"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["249"],"'callback' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'dialog'. Either include it or remove the dependency array.",["250"],"React Hook useEffect has missing dependencies: 'props.chat.pub_key' and 'props.socket'. Either include them or remove the dependency array.",["251"],"React Hook useMemo has a missing dependency: 'pub_key'. Either include it or remove the dependency array.",["252"],"'params' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["253"],"React Hook useEffect has a missing dependency: 'scrollCallback'. Either include it or remove the dependency array.",["254"],"'screen' is assigned a value but never used.","'chat' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listener'. Either include it or remove the dependency array.",["255"],["256"],"'isRedirect' is assigned a value but never used.","'SetRedirect' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["257"],"'setKeys' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.",["258"],"'Reducer' is defined but never used.","'isType' is defined but never used.","@typescript-eslint/no-redeclare","'sendMessage' is already defined.","redeclared","'Actions' is defined but never used.","'userReducer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"263","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},"Update the dependencies array to be: [dispatch]",{"range":"284","text":"285"},"Update the dependencies array to be: [signOut, token]",{"range":"286","text":"287"},"Update the dependencies array to be: [params.id, props]",{"range":"288","text":"289"},{"range":"290","text":"289"},"Update the dependencies array to be: [dialog]",{"range":"291","text":"292"},"Update the dependencies array to be: [chat, props.chat.pub_key, props.socket]",{"range":"293","text":"294"},"Update the dependencies array to be: [props, pub_key]",{"range":"295","text":"296"},"Update the dependencies array to be: [isRead, props.id]",{"range":"297","text":"298"},"Update the dependencies array to be: [scrollCallback]",{"range":"299","text":"300"},"Update the dependencies array to be: [listener]",{"range":"301","text":"302"},"Update the dependencies array to be: [listener, search.state]",{"range":"303","text":"304"},"Update the dependencies array to be: [history]",{"range":"305","text":"306"},"Update the dependencies array to be: [search]",{"range":"307","text":"308"},[531,533],"[dispatch]",[1748,1755],"[signOut, token]",[1447,1449],"[params.id, props]",[1510,1521],[3325,3347],"[dialog]",[4417,4423],"[chat, props.chat.pub_key, props.socket]",[949,956],"[props, pub_key]",[1987,1995],"[isRead, props.id]",[2043,2045],"[scrollCallback]",[1468,1470],"[listener]",[1547,1561],"[listener, search.state]",[1014,1016],"[history]",[779,781],"[search]"]
