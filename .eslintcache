[{"/Users/vladdenisov/projects/web/src/index.tsx":"1","/Users/vladdenisov/projects/web/src/reportWebVitals.ts":"2","/Users/vladdenisov/projects/web/src/App.tsx":"3","/Users/vladdenisov/projects/web/src/Pages/Login/Login.tsx":"4","/Users/vladdenisov/projects/web/src/Pages/Home/Home.tsx":"5","/Users/vladdenisov/projects/web/src/config.ts":"6","/Users/vladdenisov/projects/web/src/Pages/Chat/Chat.tsx":"7","/Users/vladdenisov/projects/web/src/Components/Preloader/Preloader.tsx":"8","/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/Sidebar.tsx":"9","/Users/vladdenisov/projects/web/src/Pages/Chat/Dialog/Dialog.tsx":"10","/Users/vladdenisov/projects/web/src/Pages/Chat/Dialog/Message.tsx":"11","/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/Header/Header.tsx":"12","/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/ChatList/ChatList.tsx":"13","/Users/vladdenisov/projects/web/src/Utils/decrypt.ts":"14","/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/ChatList/ChatCard.tsx":"15","/Users/vladdenisov/projects/web/src/Components/UserPicture/UserPicture.tsx":"16","/Users/vladdenisov/projects/web/src/Utils/keysUtils.ts":"17","/Users/vladdenisov/projects/web/src/Utils/formatDate.ts":"18","/Users/vladdenisov/projects/web/src/Pages/Chat/Dialog/MessageInput.tsx":"19","/Users/vladdenisov/projects/web/src/Utils/encrypt.ts":"20","/Users/vladdenisov/projects/web/src/Contexts/UserContext.tsx":"21","/Users/vladdenisov/projects/web/src/Contexts/DialogContext.tsx":"22","/Users/vladdenisov/projects/web/src/Pages/Chat/Dialog/DialogHeader.tsx":"23","/Users/vladdenisov/projects/web/src/Pages/Register/Register.tsx":"24","/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/Search/Search.tsx":"25","/Users/vladdenisov/projects/web/src/Contexts/SearchReducer.tsx":"26","/Users/vladdenisov/projects/web/src/Contexts/ScreenContext.tsx":"27","/Users/vladdenisov/projects/web/src/Typings/Message.d.ts":"28","/Users/vladdenisov/projects/web/src/Logux/store.ts":"29","/Users/vladdenisov/projects/web/src/Logux/connect.ts":"30","/Users/vladdenisov/projects/web/src/Reducers/index.ts":"31","/Users/vladdenisov/projects/web/src/Reducers/UserReducer.ts":"32","/Users/vladdenisov/projects/web/src/Reducers/ChatReducer.ts":"33"},{"size":1029,"mtime":1622234844225,"results":"34","hashOfConfig":"35"},{"size":416,"mtime":1622234751917,"results":"36","hashOfConfig":"35"},{"size":592,"mtime":1622234843792,"results":"37","hashOfConfig":"35"},{"size":2865,"mtime":1622234846341,"results":"38","hashOfConfig":"35"},{"size":2013,"mtime":1622234846278,"results":"39","hashOfConfig":"35"},{"size":128,"mtime":1622234751300,"results":"40","hashOfConfig":"35"},{"size":1074,"mtime":1622234844357,"results":"41","hashOfConfig":"35"},{"size":300,"mtime":1622234843805,"results":"42","hashOfConfig":"35"},{"size":1332,"mtime":1622237615271,"results":"43","hashOfConfig":"35"},{"size":4417,"mtime":1622234844529,"results":"44","hashOfConfig":"35"},{"size":4192,"mtime":1622236629474,"results":"45","hashOfConfig":"35"},{"size":639,"mtime":1622234845922,"results":"46","hashOfConfig":"35"},{"size":1483,"mtime":1622235734817,"results":"47","hashOfConfig":"35"},{"size":984,"mtime":1622234752093,"results":"48","hashOfConfig":"35"},{"size":2850,"mtime":1622234845602,"results":"49","hashOfConfig":"35"},{"size":732,"mtime":1622234843841,"results":"50","hashOfConfig":"35"},{"size":445,"mtime":1622234752495,"results":"51","hashOfConfig":"35"},{"size":1651,"mtime":1622234752413,"results":"52","hashOfConfig":"35"},{"size":2524,"mtime":1622234845369,"results":"53","hashOfConfig":"35"},{"size":724,"mtime":1622234752165,"results":"54","hashOfConfig":"35"},{"size":1912,"mtime":1622234844184,"results":"55","hashOfConfig":"35"},{"size":2464,"mtime":1622234843923,"results":"56","hashOfConfig":"35"},{"size":402,"mtime":1622234844601,"results":"57","hashOfConfig":"35"},{"size":4656,"mtime":1622234846654,"results":"58","hashOfConfig":"35"},{"size":2062,"mtime":1622234845968,"results":"59","hashOfConfig":"35"},{"size":1870,"mtime":1622234844129,"results":"60","hashOfConfig":"35"},{"size":1370,"mtime":1622234844034,"results":"61","hashOfConfig":"35"},{"size":115,"mtime":1622234752010,"results":"62","hashOfConfig":"35"},{"size":519,"mtime":1622234751424,"results":"63","hashOfConfig":"35"},{"size":956,"mtime":1622234751397,"results":"64","hashOfConfig":"35"},{"size":1783,"mtime":1622234751708,"results":"65","hashOfConfig":"35"},{"size":1365,"mtime":1622234751851,"results":"66","hashOfConfig":"35"},{"size":2834,"mtime":1622234751626,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"1d5vwsx",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"71"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"71"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"71"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"/Users/vladdenisov/projects/web/src/index.tsx",["140"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport Login from './Pages/Login/Login'\nimport Home from './Pages/Home/Home'\nimport Register from './Pages/Register/Register'\nimport { ScreenProvider } from './Contexts/ScreenContext'\nReactDOM.render(\n  <React.StrictMode>\n    <ScreenProvider>\n      <BrowserRouter>\n        <App>\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route path={['/:id', '/']} exact component={Home} />\n        </App>\n      </BrowserRouter>\n    </ScreenProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n",["141","142"],"/Users/vladdenisov/projects/web/src/reportWebVitals.ts",[],"/Users/vladdenisov/projects/web/src/App.tsx",[],"/Users/vladdenisov/projects/web/src/Pages/Login/Login.tsx",[],"/Users/vladdenisov/projects/web/src/Pages/Home/Home.tsx",["143"],"import React, { useState, useEffect } from 'react'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport Preloader from '../../Components/Preloader/Preloader'\nimport config from '../../config'\nimport Chat from '../Chat/Chat'\nimport { badge, Client } from '@logux/client'\nimport store from '../../Logux/store'\nimport { badgeStyles } from '@logux/client/badge/styles'\nimport { Provider } from 'react-redux'\nbadge(store.client, {\n  messages: {\n    synchronized: 'Everything is up to date',\n    disconnected: 'No connection to server.',\n    wait: 'Sending...',\n    sending: 'Sending...',\n    error: 'Error occurred. Please, try again!',\n    protocolError: 'Error occurred. Please, contact admins!',\n    syncError: 'Error while syncing...',\n    denied: 'Access denied'\n  },\n  styles: badgeStyles\n})\n\nconst Home = () => {\n  const [isLoggined, setLoginned] = useState(0)\n  const token = localStorage.getItem('token')\n  const history = useHistory()\n  const signOut = () => {\n    history.push('/login')\n    setLoginned(1)\n    localStorage.removeItem('key')\n    localStorage.removeItem('token')\n    localStorage.removeItem('user_id')\n  }\n  // Check if authenticated\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      let client = new Client({\n        subprotocol: '1.0.0',\n        server: config.socket_url,\n        userId: 'anonymous'\n      })\n      client.on('add', (action: any) => {\n        if (action.type === 'user/check/done') {\n          store.client.start()\n          setLoginned(2)\n        } else if (action.type === 'logux/undo') {\n          signOut()\n        }\n      })\n      client.start()\n      client.log.add(\n        { type: 'user/check', token: localStorage.getItem('token') },\n        { sync: true }\n      )\n    } else {\n      signOut()\n    }\n  }, [token])\n\n  if (isLoggined === 0) {\n    return <Preloader />\n  }\n\n  if (isLoggined === 1) {\n    return <Redirect to={'/login'} />\n  }\n  return (\n    <Provider store={store}>\n      <Chat />\n    </Provider>\n  )\n}\n\nexport default Home\n","/Users/vladdenisov/projects/web/src/config.ts",[],"/Users/vladdenisov/projects/web/src/Pages/Chat/Chat.tsx",[],"/Users/vladdenisov/projects/web/src/Components/Preloader/Preloader.tsx",[],"/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/Sidebar.tsx",["144"],"/Users/vladdenisov/projects/web/src/Pages/Chat/Dialog/Dialog.tsx",[],"/Users/vladdenisov/projects/web/src/Pages/Chat/Dialog/Message.tsx",[],"/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/Header/Header.tsx",[],"/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/ChatList/ChatList.tsx",[],"/Users/vladdenisov/projects/web/src/Utils/decrypt.ts",[],"/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/ChatList/ChatCard.tsx",["145","146"],"import { FunctionComponent, useEffect, useMemo } from 'react'\nimport TimeAgo from 'timeago-react'\nimport UserPicture from '../../../../Components/UserPicture/UserPicture'\nimport { ChatResponse } from '../../../../Typings/ChatReponse'\nimport { decryptMessage } from '../../../../Utils/decrypt'\nimport { formatTime } from '../../../../Utils/formatDate'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from '@logux/redux'\nimport { createChat } from '../../../../Reducers'\nimport store from '../../../../Logux/store'\nimport { useParams } from 'react-router'\n\nconst ChatCard: FunctionComponent<{ chat: ChatResponse }> = (props) => {\n  const { chat } = props\n  let history = useHistory()\n  const dispatch = useDispatch()\n  const params: {\n    id: string\n  } = useParams()\n  useEffect(() => {\n    store.client.log.type(\n      'chat/create/done',\n      (\n        action: {\n          type: 'chat/create/done'\n          payload: {\n            chat_id: string\n          }\n        },\n        _\n      ) => {\n        history.push(`/${action.payload.chat_id}`)\n      }\n    )\n  }, [history])\n  const text = useMemo(() => {\n    if (chat.messages[0]) {\n      try {\n        return decryptMessage(\n          localStorage.getItem('key'),\n          chat.messages[0].content,\n          chat.user.pub_key\n        ).text\n      } catch (e) {\n        return ''\n      }\n    }\n    return ''\n  }, [chat.messages[0], chat.user.pub_key])\n  const handleClick = (_: any) => {\n    if (!chat.chat_id) {\n      dispatch.sync(createChat({ user_id: chat.user.user_id }))\n    } else {\n      history.push(`/${chat.chat_id}`)\n    }\n  }\n  return (\n    <>\n      <div\n        className={`chat_list__card ${\n          params.id === props.chat.chat_id ? 'active' : ''\n        }`}\n        onClick={(e) => handleClick(e)}\n      >\n        <UserPicture\n          username={chat.user.username}\n          picture={chat.user.picture}\n        />\n        <div className={'right'}>\n          <div className={'chat_list__card___top'}>\n            <span className={'chat_list__card___top____username'}>\n              {chat.user.username}\n            </span>\n            <span className={'chat_list__card___top____date'}>\n              {chat.messages[0] && chat.messageAt ? (\n                formatTime(chat.messageAt) ? (\n                  formatTime(chat.messageAt)\n                ) : (\n                  <TimeAgo\n                    datetime={chat.messageAt}\n                    opts={{ minInterval: 5 }}\n                  />\n                )\n              ) : (\n                ''\n              )}\n            </span>\n          </div>\n          <div className={'chat_list__card___bottom'}>\n            <span className={'chat_list__card___bottom____content'}>\n              {text}\n            </span>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ChatCard\n","/Users/vladdenisov/projects/web/src/Components/UserPicture/UserPicture.tsx",[],"/Users/vladdenisov/projects/web/src/Utils/keysUtils.ts",[],"/Users/vladdenisov/projects/web/src/Utils/formatDate.ts",[],"/Users/vladdenisov/projects/web/src/Pages/Chat/Dialog/MessageInput.tsx",[],"/Users/vladdenisov/projects/web/src/Utils/encrypt.ts",[],"/Users/vladdenisov/projects/web/src/Contexts/UserContext.tsx",[],["147","148"],"/Users/vladdenisov/projects/web/src/Contexts/DialogContext.tsx",[],"/Users/vladdenisov/projects/web/src/Pages/Chat/Dialog/DialogHeader.tsx",[],"/Users/vladdenisov/projects/web/src/Pages/Register/Register.tsx",[],"/Users/vladdenisov/projects/web/src/Pages/Chat/Sidebar/Search/Search.tsx",[],"/Users/vladdenisov/projects/web/src/Contexts/SearchReducer.tsx",[],"/Users/vladdenisov/projects/web/src/Contexts/ScreenContext.tsx",[],"/Users/vladdenisov/projects/web/src/Typings/Message.d.ts",[],"/Users/vladdenisov/projects/web/src/Logux/store.ts",[],"/Users/vladdenisov/projects/web/src/Logux/connect.ts",[],"/Users/vladdenisov/projects/web/src/Reducers/index.ts",["149"],"import { userReducer } from './UserReducer'\n\nimport { combineReducers } from 'redux'\nimport actionCreatorFactory from 'typescript-fsa'\nimport { chatReducer } from './ChatReducer'\n\nconst actionCreator = actionCreatorFactory()\n\nexport const changeChat = actionCreator<{ id: string }>('chat/change')\nexport type changeChatAction = ReturnType<typeof changeChat>\nexport const setChatId = actionCreator<{ id: string }>('chat/set_id')\nexport type setChatIdAction = ReturnType<typeof setChatId>\n\nexport const getMessages =\n  actionCreator<{ pg: number; chat_id: string }>('chat/messages/get')\nexport type getMessagesAction = ReturnType<typeof getMessages>\n\nexport const setMessageRead =\n  actionCreator<{ message_id: string; chat_id: string }>('chat/message/read')\nexport type setMessageReadAction = ReturnType<typeof setMessageRead>\n\nexport const searchUsers = actionCreator<{ query: string }>('users/search')\nexport type searchUsersAction = ReturnType<typeof searchUsers>\n\nexport const createChat = actionCreator<{ user_id: string }>('chat/create')\nexport type createChatAction = ReturnType<typeof createChat>\n\nexport const sendMessage =\n  actionCreator<{\n    content: string\n    from: string | null\n    chat_id: string\n  }>('chat/messages/send')\nexport type sendMessageAction = ReturnType<typeof sendMessage>\n\nexport type SubscribeAction = { type: 'logux/subscribe'; channel: string }\nexport const subscribe = (channel: string): SubscribeAction => ({\n  type: 'logux/subscribe',\n  channel\n})\n\ntype Actions =\n  | changeChatAction\n  | SubscribeAction\n  | getMessagesAction\n  | setChatIdAction\n  | sendMessageAction\n  | searchUsersAction\n\nconst rootReducer = combineReducers({\n  userReducer,\n  chatReducer\n})\n\nexport default rootReducer\nexport type RootState = ReturnType<typeof rootReducer>\n","/Users/vladdenisov/projects/web/src/Reducers/UserReducer.ts",[],"/Users/vladdenisov/projects/web/src/Reducers/ChatReducer.ts",[],{"ruleId":"150","severity":1,"message":"151","line":6,"column":32,"nodeType":"152","messageId":"153","endLine":6,"endColumn":36},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":53,"column":6,"nodeType":"160","endLine":53,"endColumn":13,"suggestions":"161"},{"ruleId":"158","severity":1,"message":"162","line":18,"column":6,"nodeType":"160","endLine":18,"endColumn":26,"suggestions":"163"},{"ruleId":"158","severity":1,"message":"164","line":40,"column":6,"nodeType":"160","endLine":40,"endColumn":43,"suggestions":"165"},{"ruleId":"158","severity":1,"message":"166","line":40,"column":7,"nodeType":"167","endLine":40,"endColumn":23},{"ruleId":"154","replacedBy":"168"},{"ruleId":"156","replacedBy":"169"},{"ruleId":"150","severity":1,"message":"170","line":42,"column":6,"nodeType":"152","messageId":"153","endLine":42,"endColumn":13},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["171"],"no-negated-in-lhs",["172"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'signOut'. Either include it or remove the dependency array.","ArrayExpression",["173"],"React Hook useEffect has a missing dependency: 'isOpenedByUser'. Either include it or remove the dependency array.",["174"],"React Hook useMemo has a missing dependency: 'chat.messages'. Either include it or remove the dependency array.",["175"],"React Hook useMemo has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression",["171"],["172"],"'Actions' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [signOut, token]",{"range":"182","text":"183"},"Update the dependencies array to be: [isOpenedByUser, screen.state.width]",{"range":"184","text":"185"},"Update the dependencies array to be: [chat.messages, chat.user.pub_key]",{"range":"186","text":"187"},[1748,1755],"[signOut, token]",[742,762],"[isOpenedByUser, screen.state.width]",[1289,1326],"[chat.messages, chat.user.pub_key]"]